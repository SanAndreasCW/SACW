CREATE TABLE IF NOT EXISTS player (
    id SERIAL PRIMARY KEY,
    username VARCHAR(24) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    money INT NOT NULL DEFAULT 1000,
    level INT NOT NULL DEFAULT 1,
    exp INT NOT NULL DEFAULT 0,
    gold INT NOT NULL DEFAULT 0,
    token INT NOT NULL DEFAULT 0,
    hour INT NOT NULL DEFAULT 0,
    minute INT NOT NULL DEFAULT 0,
    second INT NOT NULL DEFAULT 0,
    vip INT NOT NULL DEFAULT 0,
    helper INT NOT NULL DEFAULT 0,
    is_online BOOLEAN NOT NULL DEFAULT false,
    kills INT NOT NULL DEFAULT 0,
    deaths INT NOT NULL DEFAULT 0,
    pos_x FLOAT4 NOT NULL DEFAULT 1682.0309,
    pos_y FLOAT4 NOT NULL DEFAULT 1448.0178,
    pos_z FLOAT4 NOT NULL DEFAULT 10.7724,
    pos_angle FLOAT4 NOT NULL DEFAULT 270.0725,
    language INT NOT NULL DEFAULT 0,
    last_login TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_played TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS perk (
    id SERIAL PRIMARY KEY,
    name VARCHAR(36) NOT NULL,
    description VARCHAR(256) NOT NULL
);
CREATE TABLE IF NOT EXISTS profit (
    id SERIAL PRIMARY KEY,
    name VARCHAR(36) NOT NULL,
    description VARCHAR(256) NOT NULL,
    amount INT NOT NULL,
    profit_type INT NOT NULL
);
CREATE TABLE IF NOT EXISTS skin (
    id SERIAL PRIMARY KEY,
    player_id INT NOT NULL,
    skin_id INT NOT NULL,
    active BOOL NOT NULL,
    FOREIGN KEY (player_id) REFERENCES player(id) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE (player_id, skin_id),
    UNIQUE (player_id, active)
);
CREATE TABLE IF NOT EXISTS ban (
    id SERIAL PRIMARY KEY,
    admin_id INT NOT NULL,
    username VARCHAR(24) NOT NULL,
    ip VARCHAR(15) NOT NULL,
    reason VARCHAR(128),
    banned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expire_at TIMESTAMP,
    FOREIGN KEY (admin_id) REFERENCES player(id)
);
CREATE TABLE IF NOT EXISTS guild (
    id SERIAL PRIMARY KEY,
    name VARCHAR(24) UNIQUE NOT NULL,
    tag VARCHAR(3) UNIQUE NOT NULL,
    leader_id INT NULL DEFAULT NULL,
    testimonial VARCHAR(128) NULL,
    level INT NOT NULL DEFAULT 1,
    exp INT NOT NULL DEFAULT 0,
    points INT NOT NULL DEFAULT 0,
    favors INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT false,
    color INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (leader_id) REFERENCES player(id) ON DELETE SET NULL ON UPDATE SET NULL
);

CREATE TABLE IF NOT EXISTS guild_perk (
    id SERIAL PRIMARY KEY,
    guild_id INT NOT NULL,
    perk_id INT NOT NULL,
    FOREIGN KEY (guild_id) REFERENCES guild(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (perk_id) REFERENCES perk(id) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE (guild_id, perk_id)
);

CREATE TABLE IF NOT EXISTS guild_member (
    id SERIAL PRIMARY KEY,
    guild_id INT NOT NULL,
    player_id INT NOT NULL,
    role INT NOT NULL DEFAULT 0,
    hour INT NOT NULL DEFAULT 0,
    minute INT NOT NULL DEFAULT 0,
    second INT NOT NULL DEFAULT 0,
    FOREIGN KEY (guild_id) REFERENCES guild(id) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (player_id) REFERENCES player(id) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE (guild_id, player_id)
);

CREATE TABLE IF NOT EXISTS guild_base (
    id SERIAL PRIMARY KEY,
    guild_id INT NULL DEFAULT NULL,
    name VARCHAR(34) NOT NULL,
    min_x FLOAT4 NOT NULL,
    min_y FLOAT4 NOT NULL,
    max_x FLOAT4 NOT NULL,
    max_y FLOAT4 NOT NULL,
    expire_at TIMESTAMP NULL DEFAULT NULL,
    FOREIGN KEY (guild_id) REFERENCES guild(id) ON DELETE SET NULL ON UPDATE SET NULL,
    UNIQUE (guild_id)
);

CREATE TABLE IF NOT EXISTS guild_capturable_zone (
    id SERIAL PRIMARY KEY,
    name VARCHAR(34) NOT NULL,
    guild_id INT NULL DEFAULT NULL,
    min_x FLOAT4 NOT NULL,
    min_y FLOAT4 NOT NULL,
    max_x FLOAT4 NOT NULL,
    max_y FLOAT4 NOT NULL,
    FOREIGN KEY (guild_id) REFERENCES guild(id) ON DELETE SET NULL ON UPDATE SET NULL,
    UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS profitable_zone (
    id SERIAL PRIMARY KEY,
    name VARCHAR(34) NOT NULL,
    profit_id INT NULL DEFAULT NULL,
    min_x FLOAT4 NOT NULL,
    min_y FLOAT4 NOT NULL,
    max_x FLOAT4 NOT NULL,
    max_y FLOAT4 NOT NULL,
    FOREIGN KEY (profit_id) REFERENCES profit(id) ON DELETE SET NULL ON UPDATE SET NULL,
    UNIQUE (name)
);
